// <auto-generated />
using System;
using CineWorld.Services.ReactionAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CineWorld.Services.ReactionAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241103103218_seedTable")]
    partial class seedTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CineWorld.Services.ReactionAPI.Models.UserFavorites", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FavoritedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "MovieId");

                    b.ToTable("UserFavorites");

                    b.HasData(
                        new
                        {
                            UserId = "user1",
                            MovieId = 101,
                            FavoritedAt = new DateTime(2024, 11, 1, 10, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = "user1",
                            MovieId = 102,
                            FavoritedAt = new DateTime(2024, 11, 1, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = "user2",
                            MovieId = 101,
                            FavoritedAt = new DateTime(2024, 11, 1, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = "user3",
                            MovieId = 103,
                            FavoritedAt = new DateTime(2024, 11, 2, 9, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = "user1",
                            MovieId = 103,
                            FavoritedAt = new DateTime(2024, 11, 2, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CineWorld.Services.ReactionAPI.Models.UserRates", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    b.Property<int>("EpisodeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("RatingValue")
                        .HasColumnType("float");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RatingId");

                    b.ToTable("UserRates");

                    b.HasData(
                        new
                        {
                            RatingId = 1,
                            EpisodeId = 101,
                            RatedAt = new DateTime(2024, 11, 1, 10, 45, 0, 0, DateTimeKind.Unspecified),
                            RatingValue = 4.0,
                            UserId = "user1"
                        },
                        new
                        {
                            RatingId = 2,
                            EpisodeId = 101,
                            RatedAt = new DateTime(2024, 11, 1, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            RatingValue = 5.0,
                            UserId = "user2"
                        },
                        new
                        {
                            RatingId = 3,
                            EpisodeId = 102,
                            RatedAt = new DateTime(2024, 11, 1, 11, 15, 0, 0, DateTimeKind.Unspecified),
                            RatingValue = 3.0,
                            UserId = "user1"
                        },
                        new
                        {
                            RatingId = 4,
                            EpisodeId = 103,
                            RatedAt = new DateTime(2024, 11, 2, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            RatingValue = 2.0,
                            UserId = "user3"
                        },
                        new
                        {
                            RatingId = 5,
                            EpisodeId = 103,
                            RatedAt = new DateTime(2024, 11, 2, 10, 5, 0, 0, DateTimeKind.Unspecified),
                            RatingValue = 4.0,
                            UserId = "user1"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
